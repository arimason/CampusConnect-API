basePath: /
definitions:
  resource.createAuthReq:
    properties:
      courseID:
        description: id do curso
        type: string
      email:
        description: email realizado para fazer login
        type: string
      firstName:
        description: nome
        type: string
      lastName:
        description: sobrenome
        type: string
      name:
        description: nome realizado para fazer login
        type: string
      password:
        description: senha deve conter pelo menos 8 caracteres
        minLength: 8
        type: string
      permission:
        description: 'permission deve ser um desses valores: ''student'', ''teacher'',
          ''admin'', ''owner'''
        type: string
    required:
    - courseID
    - email
    - firstName
    - lastName
    - name
    - password
    - permission
    type: object
  resource.errorResp:
    properties:
      error:
        description: refere diretamente ao erro
        type: string
      message:
        description: referente a mensagem tratada do erro
        type: string
    type: object
  resource.loginReq:
    properties:
      emailOrName:
        description: nick ou email usado para realizar login
        type: string
      password:
        description: senha
        type: string
    required:
    - emailOrName
    - password
    type: object
  resource.loginResp:
    properties:
      token:
        description: token utilizado para autenticacao
        type: string
    type: object
host: 193.123.118.221:18181
info:
  contact: {}
  description: API for university
  termsOfService: http://swagger.io/terms/
  title: Campus Connect API
  version: "1.0"
paths:
  /pub/user:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: User request created
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.createAuthReq'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resource.errorResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/resource.errorResp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/resource.errorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resource.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resource.errorResp'
      summary: Create User
      tags:
      - auth
  /pub/user/login:
    post:
      consumes:
      - application/json
      description: Request for Login
      parameters:
      - description: User request login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/resource.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully logged in
          schema:
            $ref: '#/definitions/resource.loginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/resource.errorResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/resource.errorResp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/resource.errorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/resource.errorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/resource.errorResp'
      summary: Login
      tags:
      - auth
securityDefinitions:
  ApiKeyAtuh:
    in: Header
    name: Authorization
    type: apiKey
swagger: "2.0"
